1. Resource on policies
2. Website s3: http://robertoarcomano.s3-website.eu-central-1.amazonaws.com/
	    http://BUCKET.s3-website.REGION.amazonaws.com
3. For replication you must enable versioning on both source and dest

ECS: need instance
Fargate: servless
ECR: Elastic Container Registry

SERVERLESS: S3, DynamoDB, Fargate, Lambda

Lambda: on-demand, event-driven, pay for calls/duration
	limited: runtimes, temmporary disk space, time (15')

cloudwatch events EventBridge -> cron

lambda auto scales on load

Amazon API Gateway: serverless API

ECS: Elastic Container Service
ECR: Elastic Container Registry

AWS Batch: launches EC2, docker images on ECS, no time limit, any runtime, runs on EBS

Amazon Lightsail: vm, storage, db, net..... easy way, HA, no autoscaling



CloudFormation: like terraform, declarative, infra as a code
useful to repeat
	IaaC

BeanStalk: deploy web env -> uses CloudFormation
	    used to develop
	    PaaC

CodeDeploy: Cloud/onPremise/Hybrid using an agent
CodeCommit: similiar to github
CodeBuild
CodePipeline: orchiestration
CodeArtifact: dependencies
CodeStar: UI, edit in-the-cloud using Cloud9
Cloud9: IDE

AWS Systems Manager: SSM operations on on Premises as well as on Cloud
                     SSM agent needed
                     AMI Role needed
                     Can execute commands, patch, configure...
                     Fleet manager
                     Session Manager (ssh like)

AWS OpsWorks: Chef/Puppet
		alternative to SSM

sqs decouple, serverless: pull
sns topic 1 to many: push
kinesis big data streaming
Amazon MQ: standard protocol for queue
CloudWatch like Prometeus/Grafana
	billing: just for US east-1
CLoudWatch logs
	   EventBridge = CloudWatch events

CloudTrail
		just mng events by default
		insights: unusual activities
		90days

x-Ray		Debugging many services graphically
CodeGuru	automatic code reviews (Machine learning)

VPC	Network
	default VPC
	Virtual Private Cloud
	1 each region
	Public subnet
	Private subnet
	Route tables
	CIDR Range
	Internet Gateways
	NAT Gateways (AWS)
	NAT Instances (self)

NACL	Network ACL
	Allow and Deny rules: only IP
	stateless

Security groups:
	Just allow rules
	stateful

VPC Flow Logs: troubleshooting

VPC Peering: connect 2 VPC privately
		not transitive

VPC Endpoints
	Gateway for S3 & DynamoDB
	Interface else
	Connect services privately

Site to Site VPN
	on premises to VPC using Internet
	Customer Gateway (CGW)
	Virtual Private Gateway (VPG)

Direct Connect (DX)
	on premises to AWS
	more private, faster

AWS Transit Gateway to semplify anything
 	to connect 1000s of network



Anti-DDOS:
	AWS Shield Standard (free)
        Advanced (3k$, protect from costs)
	AWS WAF: filter: Web Application Firewall
		WEB ACL (http requests..., sql injection)

Penetration Testing
	Don't need auth for some services
	Other -> Prohibited

Encryption
	at Rest: on a device
	in transit
	KMS (Key Management Service) -> AWS Manages keys
	CloudHSM (AWS gives HW, customer SW)
	CMK (Customer Master Keys) ->
		Customer Managed
		AWS Managed
		AWS Owned
		CloudHSM key

AWS Certificate MANAGER (ACM)
	https

AWS Secrets Manager
	you can force rotation	(x days)
	Integration with RDS

AWS Artifact - access documentation - for audit
	Artifact Reports
	Artifact Agreements

Amazon GuardDuty
	Uses Machine Learning: how to protect your data from LOGS
	helps protect from CryptoCurrency attacks

Amazon Inspector EC2 only
	Security assessments
	Generates Reports
 	Sent to Security hub as well as EventBridge
 	CVE checks
 	Risk score

AWS Config
	Auditing / recording compliance
	Record Configurations
	SNS notifications
	Show not compliant rules

Amazon Macie
	Uses machine learning to protect sensitive data

AWS Security Hub
	Aggregate alerts -> 1 place for all security

Amazon Detective
	Deep analyses -> root cause
	Uses ML and graphs
	Automatically collects and process events from Logs

AWS Abuse
	If you suspect -> you can report: Spam, Port Scanning, DDOS, Intrusion Attemps, Copyright violation, malware
	Abuse form o abuse email

Root user privileges
	never use it
	Use it for:
		Change account settings, close, Change AWS Support plan,


Machine Learning:
	Amazon Rekognition
	Transcribe: speech to text (ASR)
	Polly: text to Speech
	Amazon Translate

Amazon Lex & Connect (like Alexa)
	LEX: ASR, intent as well - bots
	Connect: Virtual Contect calls

Amazon Comprehend: NLP Natural Language Processing (servless)

Amazon SageMaker:
	build ML models
	Train and Tune
	New data

Amazon Forecast
	predict (sales) from historical data -> Forecasting model

Amazon Kendra
	extract info from lots of data resources (WORD, text, pdf)
	with natural language search capabilities

Amazon Personalize
	recommentaions for buying products

Control Tower: govern multi-account environment


Savings plan: commit $/h for 1/3 years (hour budget)

Resource groups using tags for costs

Cost explorer for Forecast

Costs: Alarm (east1), Budgets, Trusted Advisor (Checks) (support plan basic/dev[5 cats] or business)

Supports: Basic(free)
	  Developer (Business hours email)
	  Business Support Plan (production, all checks, < 4/1 hours)
	  Enterprise on Ramp: Tecnical Account Managers (TAM) < 30'
 	  Enterprise Support: Designated TAM < 15'

STS (Security Token Service): identity federation: temporary/limited-privileges

Amazon Cognito (Identity for web / mobile app)

Microsoft AD using AWS Directory Services:
	AWS Managed Microsoft AD
	AD Connector
	Simple AD

SSO


Amazon WOrkSpaces:
	DaaS (Desktop)
	Lower Latencies -> different WorkSpaces in different Regions (close to users)

Amazon AppStream 2.0 (Streaming)
	working from a webservices
	you can configure cpu/mem...

Amazon Sumerian: Virtual Reality/Augmented Reality (3dmodels)

AWS IoT Core: collect data from IoT

Amazon Elastic Transcoder (convert media files with a transcoding pipeline)

AWS Device Farm
	Launch test on mobile/tables...
	Wifi/ GPS Bluetooth
	Test Android

AWS Backup	Centrally manage and automate backups across AWS Services
	PITR (Point in time)
	Backup Plan

Disaster Recovery Strategies
	cheapest? Backup and Restore
	Medium: Pilot Light (ready to scale)
	More expensive: Warm Standby
	Most exprensive: Multi-Site / Hot-site

Failover to another Region

AWS Elastic Disaster Recovery (DRS)
	To recover physical/virtual...
	COntinuous block level replication using a AWS Replication Agent into a Staging ENV (low cost)
		failover in minutes
		failback

AWS DataSync
	Move on-premises to AWS, S3, EFS, FSX
	Incremental replication

AWS Fault Injection Simulator (FIS)
	Chaos Engineering (stressing with disrupting
	Expreiment Template


Architecture
	1. Stop Guessing -> use auto scaling
	2. You can test at production scale
	3. Automate
	4. Project Evolving Architectures
	5. Game days for improving with users

Design Principles:
	1. Scalability
	2. Disposible Resources
	3. Automation: serverless, autoscaling, IaaS
	4. Loose Coupling (break it in components
	5. Services, not Servers

Web Architecture Framework: 6 pillars
	Synergy amoong them

	1. Operational Excellence
	  -) Code everywhere
	  -) Annotate Documentation (automatie)
	  -) Frequent changes
	  -) refine frequently
	  -) Anticipate failure and Learn from all opperational Failures

	  -) Prepare (Cloud formation, Config)
	  -) Operate (Cloud formation, Config)
	  -) Evolve (Cloud formation, Config, CI/CD)

	2. Security
	  -) Strong identity foundation
	  -) Enable treability
	  -) all layer
	  -) in transit and at rest
	  -) Keep people away from data
	  -) Security eventis (simulations)

	  -) Identity and Access Management (IAM
	  -) Detective Controls
	  -) Infrastructure Protection
	  -) Data Protection
	  -) Incident Response


	3. Reliability
		Service Quotas = Service Limites (old name)

	4. Performance Efficiency

	5. Cost Optimization
	  -) Awareness

	6. Sustainability


AWS Well-Architectured Tool
AWS Right Sizing -> Best size at lowest cost -> process

AWS Ecosystem
	-) Blogs
	-) Forums
	-) White Papers & Guides
	-) Quick Starts
	-) AWS Solutions
	-) AWS Landing Zone replaced by AWS Control Tower

	AWS Support
	AWS Marketplace
	AWS Training
		AWS Academy

	 AWS Professional Services & Partner Network
	 APN = AWS Partner Network
	 APN Technology Partners (HW/SW)
	 APN Consulting Partners
	 APN Training Partners
	 AWS Competency Program
	 AWS Navigate Program (Better and better)

AWS Knowledge Center



