Architecture
	1. Stop Guessing -> use auto scaling
	2. You can test at production scale
	3. Automate
	4. Project Evolving Architectures
	5. Game days for improving with users

Design Principles:
	1. Scalability (H/V)
	2. Disposable Resources
	3. Automation: serverless, autoscaling, IaaS
	4. Loose Coupling (break it in components
	5. Services, not Servers

Web Architecture Framework: 6 pillars
	Synergy amoong them

	1. Operational Excellence
	  -) Code everywhere
	  -) Annotate Documentation (automatie)
	  -) Frequent changes
	  -) refine frequently
	  -) Anticipate failure and Learn from all opperational Failures

	  -) Prepare (Cloud formation, Config)
	  -) Operate (Cloud formation, Config)
	  -) Evolve (Cloud formation, Config, CI/CD)

	2. Security
	  -) Strong identity foundation
	  -) Enable treability
	  -) all layer
	  -) in transit and at rest
	  -) Keep people away from data
	  -) Security eventis (simulations)

	  -) Identity and Access Management (IAM
	  -) Detective Controls
	  -) Infrastructure Protection
	  -) Data Protection
	  -) Incident Response


	3. Reliability
		Service Quotas = Service Limites (old name)

	4. Performance Efficiency

	5. Cost Optimization
	  -) Awareness

	6. Sustainability


AWS Well-Architectured Tool
AWS Right Sizing -> Best size at lowest cost -> process

AWS Ecosystem
	-) Blogs
	-) Forums
	-) White Papers & Guides
	-) Quick Starts
	-) AWS Solutions
	-) AWS Landing Zone replaced by AWS Control Tower

	AWS Support
	AWS Marketplace
	AWS Training
		AWS Academy

	 AWS Professional Services & Partner Network
	 APN = AWS Partner Network
	 APN Technology Partners (HW/SW)
	 APN Consulting Partners
	 APN Training Partners
	 AWS Competency Program
	 AWS Navigate Program (Better and better)

AWS Knowledge Center



